group 'com.robo4j'

apply plugin: 'java'
apply plugin: 'idea'

apply from: 'libraries.gradle'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

project("robo4j-core"){
    description = "Robo4j-Brick-Client"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile(project(":robo4j-page"))
        compile(project(":robo4j-commons"))
        compile(project(":robo4j-http"))
        compile "com.googlecode.json-simple:json-simple:${jsonVersion}"
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
        testCompile "org.mockito:mockito-all:${mockitoAllVersion}@jar"
    }
}

project("robo4j-commons"){
    description = "Robo4j-Commons"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}

project("robo4j-lego"){
    description = "Robo4j-Lego"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "file://Users/miroslavkopecky/.m2/repository")
            }
        }
    }

    dependencies {
        provided "lejos:ev3classes:${lejosVersion}@jar"
        compile(project(":robo4j-commons"))
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}


project("robo4j-http"){
    description = "Robo4j-Http"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}

project("robo4j-page"){
    description = "Robo4j-Page"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }
}


project("robo4j-rpi"){
    description = "Robo4j-RaspberryPi/Arduino"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "file://Users/miroslavkopecky/.m2/repository")
            }
        }
    }

    dependencies {
        compile(project(":robo4j-commons"))
        compile "com.pi4j:pi4j-core:${pi4jVersion}"
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}








