group 'com.robo4j'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

apply from: 'libraries.gradle'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

project("robo4j-core") {
    description = "Robo4J Core"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile(project(":robo4j-page"))
        compile(project(":robo4j-http"))
        compile "com.googlecode.json-simple:json-simple:${jsonVersion}"
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }
}

project("robo4j-hw-lego") {
    description = "Robo4J Lego Hardware"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    repositories {
        mavenCentral()
        mavenLocal()
        flatDir {
            dirs 'libs'
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${mavenRepository}")
            }
        }
    }

    //sources
    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', 'src/examples/java']
            }
            resources {
                srcDirs = ['src/resources']
            }
        }
    }

    dependencies {
        compile "lejos:ev3classes:${lejosVersion}@jar"
        compile(project(":robo4j-math"))
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}

project("robo4j-hw-rpi") {
    description = "Robo4J RaspberryPi Hardware"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${mavenRepository}")
            }
        }
    }

    //sources
    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', 'src/examples/java']
            }
            resources {
                srcDirs = ['src/resources']
            }
        }
    }


    //create a single Jar with all dependencies
    task fatJar(type: Jar) {
        manifest {
            attributes 'Implementation-Title': 'robo4j-hw-rpi',
                    'Implementation-Version': version,
                    'Main-Class': 'com.robo4j.hw.rpi.i2c.adafruitlcd.Demo'
        }
        //baseName = project.name + '-all'
        baseName = 'robo4j-hw-rpi'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }

    dependencies {
        compile(project(":robo4j-math"))
        compile "com.pi4j:pi4j-core:${pi4jVersion}"
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}

//project("robo4j-lego") {
//    description = "Robo4J Lego"
//
//    group 'com.robo4j'
//    version "${robo4jVersion}"
//
//    apply plugin: 'java'
//    apply plugin: 'idea'
//    apply plugin: 'eclipse'
//    apply plugin: 'maven'
//
//    sourceCompatibility = 1.8
//
//    repositories {
//        mavenCentral()
//        mavenLocal()
//        flatDir {
//            dirs 'libs'
//        }
//    }
//
//    uploadArchives {
//        repositories {
//            mavenDeployer {
//                repository(url: "${mavenRepository}")
//            }
//        }
//    }
//
//    dependencies {
//        compileOnly "lejos:ev3classes:${lejosVersion}"
//        compile(project(":robo4j-core"))
//        testCompile "junit:junit:${junitVersion}"
//        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
//    }
//}

project("robo4j-math") {
    description = "Robo4J Math"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}


project("robo4j-http") {
    description = "Robo4j Http"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}

project("robo4j-page") {
    description = "Robo4J Page"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}@jar"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}@jar"
    }
}

project("robo4j-units-lego") {
    description = "Robo4J Lego Abstractions"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${mavenRepository}")
            }
        }
    }

    dependencies {
        compile(project(":robo4j-hw-lego"))
        compile(project(":robo4j-core"))
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}

project("robo4j-units-rpi") {
    description = "Robo4J Raspberry Pi"

    group 'com.robo4j'
    version "${robo4jVersion}"

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${mavenRepository}")
            }
        }
    }

    dependencies {
        compile(project(":robo4j-hw-rpi"))
        compile(project(":robo4j-core"))
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestAllVersion}"
    }
}
